name: Terraform
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  terraform:
    name: "Terraform"
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup AGE keyfile
        id: age-keyfile
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SOPS_AGE_KEY}}" > ./keyfile.age
      - name: Tailscale
        uses: enmand/tailscale-github-action@bda1d0f886708f8f86bc489d6138e6963551f887
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
            #tailscaled_args: "--socket=/tmp/tailscaled.sock"
            #tailscale_args: "--socket=/tmp/tailscaled.sock"
          args: "--netfilter-mode=on --snat-subnet-routes=true"
      - name: Setup Node environment
        uses: actions/setup-node
        with:
          node-version: 16
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_version: 1.1.x
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -var-file=prod.tfvars
        continue-on-error: true
        env:
          SOPS_AGE_KEY_FILE: ./keyfile.age
          SOPS_AGE_RECIPIENTS: ${{secrets.SOPS_AGE_RECIPIENTS}}
      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var-file=prod.tfvars
        env:
          SOPS_AGE_KEY_FILE: ./keyfile.age
          SOPS_AGE_RECIPIENTS: ${{secrets.SOPS_AGE_RECIPIENTS}}
