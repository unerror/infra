grafana_prometheus_username: ""
grafana_password: ""

kube-prometheus-stack:
  alertmanager:
    enabled: true
  grafana:
    enabled: true
    grafana.ini:
      server:
        root_url: https://grafana.i.unerror.network
      auth.github:
        enabled: true
        allow_signup: true
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allowed_organizations: unerror
    ingress:
      enabled: true
      ingressClassName: networking-traefik
      annotations:
        external-dns.alpha.kubernetes.io/hostname: ""
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/service.serversscheme: http
        traefik.ingress.kubernetes.io/router.entrypoints: websecure-tsnet
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - grafana.i.unerror.network
      tls:
        - hosts:
            - grafana.i.unerror.network
          secretName: grafana-ingress-tls
  prometheus:
    prometheusSpec:
      podMonitorNamespaceSelector:
        any: true
      serviceMonitorNamespaceSelector:
        any: true
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
  prometheusOperator:
    admissionWebhooks:
      certManager:
        enabled: false
        issuerRef:
          name: "letsencrypt-prod"
          kind: "ClusterIssuer"
