grafana_prometheus_username: ""
grafana_password: ""

kube-prometheus-stack:
  alertmanager:
    enabled: true
  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: networking-traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/service.serversscheme: http
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
      hosts:
        - g.i.unerror.network
      tls:
        - hosts:
            - g.i.unerror.network
          secretName: grafana-ingress-tls
  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
  prometheusOperator:
    admissionWebhooks:
      certManager:
        enabled: false
        issuerRef:
          name: "letsencrypt-prod"
          kind: "ClusterIssuer"
descheduler:
  cmdOptions:
    max-pods-to-evict-per-node: 5
  deschedulerPolicy:
    strategies:
      RemoveDuplicates:
        enabled: true
      RemovePodsViolatingNodeTaints:
        enabled: true
      RemovePodsViolatingNodeAffinity:
        enabled: true
        params:
          nodeAffinityType:
            - requiredDuringSchedulingIgnoredDuringExecution
      RemovePodsViolatingInterPodAntiAffinity:
        enabled: true
      LowNodeUtilization:
        enabled: true
        params:
          nodeResourceUtilizationThresholds:
            thresholds:
              cpu: 20
              memory: 20
              pods: 20
            targetThresholds:
              cpu: 75
              memory: 75
              pods: 15
