nameOverride: ""
fullnameOverride: ""

irc:
  replicaCount: 1
  image:
    repository: ergochat/ergo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    annotations: {}
    port: 6667
    tlsPort: 6697
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/secure-backends: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-ssl-secret: default/chatbox-crt-secret
      nginx.ingress.kubernetes.io/proxy-ssl-verify: "true"
      external-dns.alpha.kubernetes.io/target: lb.unerror.network
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    ingressClassName: nginx
    hosts:
      - irc.unerror.com
      - irc.unerror.network
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  pvc:
    size: 1Gi
    accessModes:
      - ReadWriteMany
    storageClass: csi-s3
  server:
    tls:
      enabled: true
      hostnames:
        - irc.unerror.com
        - irc.unerror.network
        - matrix.unerror.network
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
        group: cert-manager.io

tls:
  enabled: true
  hostnames:
    - irc.unerror.com
    - irc.unerror.network
    - matrix.unerror.network
    - unerror.network
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
    group: cert-manager.io

matrix-synapse:
  serverName: unerror.network
  publicServerName: matrix.unerror.network
  config:
    turnUris:
      [
        "turn:turn.unerror.network?transport=udp",
        "turn:turn.unerror.network?transport=tcp",
      ]
    enableRegistration: true
  image:
    tag: v1.44.0
  signingkey:
    job:
      enabled: false
    existingSecret: chatbox-matrix-signkey
    existingSecretKey: signing.key
  postgresql:
    enabled: true
    persistence:
      enabled: true
  redis:
    enabled: true
  volumePermissions:
    enabled: true
  persistence:
    enabled: true
    storageClass: s3-default
    accessMode: ReadWriteMany
    size: 20Gi
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    className: nginx
    tls:
      - hosts:
          - matrix.unerror.network
        secretName: chatbox-crt-secret
    hosts:
      - matrix.unerror.network
    csHosts:
      - matrix.unerror.network
    wkHosts:
      - unerror.network
    paths:
      - path: /_matrix/identity
        backend:
          serviceName: chatbox-ma1sd
          servicePort: 8090
    csPaths:
      - path: /_matrix/client/r0/user_directory
        backend:
          serviceName: chatbox-ma1sd
          servicePort: 8090
      - path: /_matrix/client/(api/v1|r0|unstable)/login
        backend:
          serviceName: chatbox-ma1sd
          servicePort: 8090
  wellknown:
    enabled: true
  extraConfig:
    max_upload_size: 128M
    max_image_pixels: 32M
    allow_guest_access: false
    auto_join_rooms:
      - "#offtopic:unerror.com"
    account_threepid_delegates:
      email: http://chatbox-ma1sd:8090
      msisdn: http://chatbox-ma1sd:8090
    trusted_third_party_id_servers: [matrix.unerror.network]
    password_providers:
      - module: rest_auth_provider.RestAuthProvider
        config:
          endpoint: "http://chatbox-ma1sd:8090"
          policy:
            registration:
              profile:
                name: true
            login:
              profile:
                name: false
    email:
      app_name: Unerror Network Matrix
      client_base_url: https://matrix.unerror.network
      enable_notifs: true
      notif_for_new_users: true
      notif_from: Unerror Network Matrix <chatbox@unerror.network>
      require_transport_security: true
      smtp_host: smtp.sendgrid.net
      smtp_port: 465
      enable_tls: true
    url_preview_enabled: true
    url_preview_ip_range_blacklist:
      - "127.0.0.0/8"
      - "10.0.0.0/8"
      - "172.16.0.0/12"
      - "192.168.0.0/16"
      - "100.64.0.0/10"
      - "192.0.0.0/24"
      - "169.254.0.0/16"
      - "192.88.99.0/24"
      - "198.18.0.0/15"
      - "192.0.2.0/24"
      - "198.51.100.0/24"
      - "203.0.113.0/24"
      - "224.0.0.0/4"
      - "::1/128"
      - "fe80::/10"
      - "fc00::/7"
      - "2001:db8::/32"
      - "ff00::/8"
      - "fec0::/10"
  synapse:
    extraCommands:
      - apt-get update -qyy && apt-get install curl unzip -yqq
      - curl -Lo /tmp/rest-provider.zip https://github.com/devplayer0/matrix-synapse-rest-password-provider/archive/master.zip
      - cd /tmp && unzip rest-provider.zip
      - cd /tmp/matrix-synapse-rest-password-provider-master && python setup.py install
    livenessProbe:
      # Give the extra commands a chance to run
      initialDelaySeconds: 30
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /_synapse/metrics
      prometheus.io/port: "9090"
    extraEnv:
      - name: LD_PRELOAD
        value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
      - name: SYNAPSE_CACHE_FACTOR
        value: "2"
  workers:
    default:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /_synapse/metrics
        prometheus.io/port: "9090"
      extraCommands:
        - apt-get update -qyy && apt-get install curl unzip -yqq
        - curl -Lo /tmp/rest-provider.zip https://github.com/devplayer0/matrix-synapse-rest-password-provider/archive/master.zip
        - cd /tmp && unzip rest-provider.zip
        - cd /tmp/matrix-synapse-rest-password-provider-master && python setup.py install
      livenessProbe:
        # Give the extra commands a chance to run
        initialDelaySeconds: 30
      extraEnv:
        - name: LD_PRELOAD
          value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
        - name: SYNAPSE_CACHE_FACTOR
          value: "2"
    generic_worker:
      enabled: true
      replicaCount: 2
      csPaths:
        # - "/_matrix/client/(v2_alpha|r0)/sync"
        - "/_matrix/client/(api/v1|v2_alpha|r0)/events"
        # - "/_matrix/client/(api/v1|r0)/initialSync"
        # - "/_matrix/client/(api/v1|r0)/rooms/[^/]+/initialSync"
        - "/_matrix/client/(api/v1|r0|unstable)/publicRooms"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/joined_members"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/context/.*"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/members"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/state"
        - "/_matrix/client/(api/v1|r0|unstable)/account/3pid"
        - "/_matrix/client/(api/v1|r0|unstable)/keys/query"
        - "/_matrix/client/(api/v1|r0|unstable)/keys/changes"
        - "/_matrix/client/versions"
        - "/_matrix/client/(api/v1|r0|unstable)/voip/turnServer"
        - "/_matrix/client/(api/v1|r0|unstable)/joined_groups"
        - "/_matrix/client/(api/v1|r0|unstable)/publicised_groups"
        # - "/_matrix/client/(api/v1|r0|unstable)/login"
        - "/_matrix/client/(r0|unstable)/register"
        - "/_matrix/client/(r0|unstable)/auth/.*/fallback/web"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/send"
        - "/_matrix/client/(api/v1|r0|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)"
        - "/_matrix/client/(api/v1|r0|unstable)/join/"
        - "/_matrix/client/(api/v1|r0|unstable)/profile/"
    pusher:
      enabled: true
    federation_sender:
      enabled: true
    media_repository:
      enabled: true
    frontend_proxy:
      enabled: true
    synchrotron:
      enabled: true

ma1sd:
  image:
    tag: 2.5.0
  serviceAccount:
    create: false
  persistence:
    enabled: false
  ingress:
    enabled: false
    ingressClassName: nginx
    hosts:
      - host: matrix.unerror.network
    tls:
      - hosts:
          - matrix.unerror.network
        secretName: chatbox-crt-secret
  config:
    dns:
      overwrite:
        homeserver:
          client:
            - name: matrix.unerror.network
              value: "http://chatbox-synapse-matrix-synapse:8008"
    hashing:
      algorithms:
        - none
        - sha256
      delay: 2m
      enabled: true
      hashStorageType: sql
      pepperLength: 20
      requests: 10
      rotationPolicy: per_requests
    key:
      path: /etc/ma1sd/signing.key
    matrix:
      domain: unerror.unerror.network
      v1: true
      v2: true
    server:
      name: unerror.network
      publicUrl: https://matrix.unerror.network
    storage:
      backend: postgresql
    synapseSql:
      enabled: true
      type: postgresql
    view:
      session:
        onTokenSubmit:
          success: "/etc/ma1sd/templates/session/tokenSubmitSuccess-page.html"
          failure: "/etc/ma1sd/templates/session/tokenSubmitSuccess.html"
    notification:
      handler:
        email: "sendgrid"
      handlers:
        sendgrid:
          identity:
            from: chatbox@unerror.network
            name: Unerror Chatbox Matrix
          templates:
            invite:
              subject: You've been invited into a room on Unerror Network Matrix
              body:
                text: /etc/ma1sd/threepids/sms/invite-template.txt
                html: /etc/ma1sd/threepids/email/invite-template.eml
            session:
              validation:
                subject: Unerror Network Matrix Session Validation
                body:
                  text: /etc/ma1sd/threepids/sms/validate-template.txt
                  html: /etc/ma1sd/threepids/email/validate-template.eml
              unbind:
                notification:
                  subject: Unerror Network Matrix Session Unbind
                  body:
                    text: /etc/ma1sd/threepids/email/unbind-notification.eml
                    html: /etc/ma1sd/threepids/sms/unbind-notification.txt
    threepid:
      email:
        identity:
          from: chatbox@unerror.network

matrix-appservice-irc:
  volumes:
    - name: ssl
      secret:
        secretName: postgres-ca-cert
  volumeMounts:
    - name: ssl
      mountPath: /ssl/db-ca.crt
      subPath: db-ca.crt
  env:
    - name: NODE_EXTRA_CA_CERTS
      value: /ssl/db-ca.crt
  registration:
    id: appservice-irc
    de.sorunome.msc2409.push_ephemeral: true
    protocols:
      - irc
    namespaces:
      rooms:
        - exclusive: false
          regex: "!CndlWZukCBAXQKSTgg:unerror.com"
        - exclusive: false
          regex: "!MgMAsxJzkeiUxYwyNS:unerror.com"
        - exclusive: false
          regex: "!THQzArbJSBoThbyySC:unerror.com"
      users:
        - exclusive: true
          regex: '@irc_.*:unerror\.com'
    rate_limited: false
    sender_localpart: irc_bot
    url: http://chatbox-matrix-appservice-irc:9999
  config:
    homeserver:
      domain: unerror.network
      enablePresence: true
      media_url: https://matrix.unerror.network
      url: http://chatbox-matrix-synapse:8008
    ircService:
      bridgeInfoState:
        enabled: true
        initial: true
      servers:
        irc.unerror.com:
          allowExpiredCerts: true
          botConfig:
            enabled: true
            joinChannelsIfNoUsers: true
            nick: MatrixBot[un]
          ircClients:
            allowNickChanges: true
            concurrentReconnectLimit: 50
            idleTimeout: 10800
            lineLimit: 3
            maxClients: 30
            nickTemplate: $DISPLAY[m]
            reconnectIntervalMs: 5000
          mappings:
            "#krokbot":
              roomIds:
                - "!THQzArbJSBoThbyySC:unerror.com"
            "#lounge":
              key: r@ns0n
              roomIds:
                - "!MgMAsxJzkeiUxYwyNS:unerror.com"
            "#offtopic":
              roomIds:
                - "!CndlWZukCBAXQKSTgg:unerror.com"
          matrixClients:
            displayName: $NICK
            joinAttempts: -1
            userTemplate: "@irc_$NICK"
          membershipLists:
            channels:
              - channel: "#lounge"
                ircToMatrix:
                  incremental: true
                  initial: true
              - channel: "#krokbot"
                ircToMatrix:
                  incremental: true
                  initial: true
              - channel: "#offtopic"
                ircToMatrix:
                  incremental: true
                  initial: true
            enabled: true
            floodDelayMs: 10000
            global:
              ircToMatrix:
                incremental: true
                initial: true
              matrixToIrc:
                incremental: true
                initial: true
            rooms:
              - matrixToIrc:
                  incremental: true
                  initial: true
                room: "!MgMAsxJzkeiUxYwyNS:unerror.com"
              - matrixToIrc:
                  incremental: true
                  initial: true
                room: "!THQzArbJSBoThbyySC:unerror.com"
              - matrixToIrc:
                  incremental: true
                  initial: true
                room: "!CndlWZukCBAXQKSTgg:unerror.com"
          modePowerMap:
            o: 50
            v: 1
          name: Unerror IRC
          port: 6697
          privateMessages:
            enabled: true
            federate: true
          sasl: true
          sendConnectionMessages: true
          ssl: true
    database:
      engine: "postgres"
