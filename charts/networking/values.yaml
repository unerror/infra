tailscale:
  replicas: 1
  image:
    repository: registry.digitalocean.com/une-k8s/networking/tailscale
    tag: v1.62.1
  imagePullSecrets:
    - name: do-docker-registry
  secret: networking-tailscale-auth-relay
  state: networking-tailscale-state
  additionalStates:
    - networking-tailscale-state-traefik-sidecar
  serviceAccount: tailscale
  additionalserviceAccountBindings:
    - networking-traefik
  proxy:
    enabled: true
    env:
      - name: USERSPACE
        value: "false"
      - name: ROUTES
        value: 10.245.0.0/16,10.244.5.128/25,10.118.0.0/20
      - name: EXTRA_ARGS
        value: "--hostname une-k8s-relay --advertise-tags=tag:une-k8s --snat-subnet-routes=true --netfilter-mode=on"

doRegistryToken: ""

coturn:
  image:
    repository: coturn/coturn
    tag: 4.6.2
  service:
    type: ClusterIP
    port: 3478
  ingress:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/target: lb-trfk.unerror.network
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
      - host: turn.unerror.network
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: turn-une-tls
        hosts:
          - turn.unerror.network
  className: networking-traefik

traefik:
  # todo: when DO supports Dualstack IPv4/IPv6 kubelets, remove this and use tailnet IPv6 as the
  # ExternalIP on a Service
  dashboard:
    hosts:
      - traefik.i.unerror.network
    tls:
      enabled: true
      secretName: networking-traefik-cert
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
  securityContext:
    runAsUser: 0
    runAsNonRoot: false
    allowPrivilegeEscalation: true
    privileged: true
  deployment:
    replicas: 3
    imagePullSecrets:
      - name: do-docker-registry
    kind: Deployment
    additionalContainers:
      - name: tailscale-sidecar
        image: registry.digitalocean.com/une-k8s/networking/tailscale:v1.62.1
        env:
          - name: KUBE_SECRET
            value: networking-tailscale-state-traefik-sidecar
          - name: USER_SPACE
            value: "false"
          - name: EXTRA_ARGS
            value: "--hostname=une-k8s-traefik --advertise-tags=tag:une-k8s --snat-subnet-routes=true --netfilter-mode=on"
          - name: AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: networking-tailscale-auth-traefik
                key: AUTH_KEY
                optional: true
  ingressClass:
    enabled: true
    fallbackApiVersion: "v1"
    isDefaultClass: true
  providers:
    kubernetesCRD:
      allowCrossNamespace: true
      allowExternalNameServices: true
    kubernetesIngress:
      publishedService:
        enabled: true
    kubernetesGateway:
      experimentalChannel: true
  logs:
    access:
      enabled: true
  additionalArguments:
    - "--entryPoints.web.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.websecure.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.irc.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entrypoints.irc.transport.respondingTimeouts.readTimeout=0"
    - "--entryPoints.ircs.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entrypoints.ircs.transport.respondingTimeouts.readTimeout=0"
    - "--entryPoints.turn-tcp.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.web-tsnet.address=[::]:80"
    - "--entryPoints.web-tsnet.http.redirections.entryPoint.to=websecure-tsnet"
    - "--entrypoints.web-tsnet.http.redirections.entryPoint.scheme=https"
    - "--entryPoints.websecure-tsnet.address=[::]:443"
    - "--entryPoints.webwebsecure-tsnet.http.tls=true"
    - "--providers.kubernetesgateway.experimentalchannel=true"
    - "--metrics.datadog=true"
    - "--metrics.datadog.addrouterslabels=true"
    - "--metrics.datadog.address=datadog-agent.une-sys.svc.cluster.local:8125"
  tlsOptions:
    default:
      preferServerCipherSuites: true
      minVersion: VersionTLS11
  ports:
    irc:
      name: irc
      port: 6667
      exposedPort: 6667
      protocol: TCP
      expose:
        default: true
    ircs:
      name: ircs
      port: 6697
      exposedPort: 6697
      protocol: TCP
      expose:
        default: true
    turn-tcp:
      name: turn-tcp
      port: 3478
      exposedPort: 3478
      protocol: TCP
      expose:
        default: true
    web:
      name: web
      nodePort: 32080
      redirectTo:
        port: websecure
    websecure:
      name: websecure
      nodePort: 32443
      tls:
        enabled: true
  service:
    annotations:
      service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
      external-dns.alpha.kubernetes.io/hostname: lb-trfk.unerror.network
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
