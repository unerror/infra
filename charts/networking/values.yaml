tailscale-relay:
  config:
    variables:
      TAILSCALE_ADVERTISE_ROUTES: 10.0.0.0/8
      TAILSCALE_ADVERTISE_TAGS: tag:une-k8s
      TAILSCALE_HOSTNAME: "une-k8s-relay"

tailscale:
  replicas: 1
  image:
    repository: registry.digitalocean.com/une-k8s/networking/tailscale
    tag: v1.16-p1
  imagePullSecrets:
    - name: do-docker-registry
  secret: networking-tailscale-auth
  state: networking-tailscale-state
  serviceAccount: tailscale
  additionalserviceAccountBindings:
    - networking-traefik
  proxy:
    enabled: true
    env:
      - name: ROUTES
        value: 10.0.0.0/8
      - name: EXTRA_ARGS
        value: "--hostname une-k8s-relay --advertise-tags tag:une-k8s --snat-subnet-routes true --netfilter-mode true"

coturn:
  coturn:
    traefik:
      tcp:
        entrypoint: turn-tcp
    service:
      type: ClusterIP
    image:
      tag: "4.5.2"

traefik:
  deployment:
    imagePullSecrets:
      - name: do-docker-registry
    kind: DaemonSet
    additionalContainers:
      - name: tailscale-sidecar
        image: registry.digitalocean.com/une-k8s/networking/tailscale:v1.16-p1
        env:
          - name: KUBE_SECRET
            value: networking-tailscale-state
          - name: USER_SPACE
            value: "false"
          - name: EXTRA_ARGS
            value: "--hostname une-k8s-traefik --advertise-tags tag:une-k8s --snat-subnet-routes true --netfilter-mode true"
          - name: AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: networking-tailscale-auth
                key: AUTH_KEY
                optional: true

  ingressClass:
    enabled: true
    fallbackApiVersion: "v1"
    isDefaultClass: true
  providers:
    kubernetesCRD:
      allowCrossNamespace: true
      allowExternalNameServices: true
    kubernetesIngress:
      publishedService:
        enabled: true
  logs:
    access:
      enabled: true
  additionalArguments:
    - "--entryPoints.web.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.websecure.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.irc.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.ircs.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
    - "--entryPoints.turn-tcp.proxyProtocol.trustedIPs=127.0.0.1/32,10.0.0.0/8"
  tlsOptions:
    default:
      preferServerCipherSuites: true
      minVersion: VersionTLS11
  ports:
    irc:
      port: 6667
      exposedPort: 6667
      protocol: TCP
      expose: true
    ircs:
      port: 6697
      exposedPort: 6697
      protocol: TCP
      expose: true
    turn-tcp:
      port: 3478
      exposedPort: 3478
      protocol: TCP
      expose: true
    web:
      nodePort: 32080
      redirectTo: websecure
    websecure:
      nodePort: 32443
      tls:
        enabled: true
  service:
    annotations:
      service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
      external-dns.alpha.kubernetes.io/hostname: lb-trfk.unerror.network
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
