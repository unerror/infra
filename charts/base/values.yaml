cert-manager:
  ingressShim:
    defaultIssuerGroup: cert-manager.io
    defaultIssuerKind: ClusterIssuer
    defaultIssuerName: letsencrypt-prod
  installCRDs: true
external-dns:
  extraArgs:
    annotation-filter: external-dns.alpha.kubernetes.io/exclude notin (true)
  crd:
    create: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  cloudflare:
    proxied: true
  provider: cloudflare
  sources:
    - crd
    - ingress
    - service
casdoorDataSourceName: ""
casdoor:
  config: |
    appname = unerror-auth
    httpport = 8000
    runmode = prod
    SessionOn = true
    copyrequestbody = true
    driverName = postgres
    dataSourceName = {{ .Values.casdoorDataSourceName }}
    dbName = casdoor
    redisEndpoint =
    defaultStorageProvider =
    isCloudIntranet = false
    authState = "uneauth"
    socks5Proxy = ""
    verificationCodeTimeout = 10
    initScore = 0
    logPostOnly = true
    origin = auth.unerror.network
    enableGzip = true
  ingress:
    enabled: true
    className: networking-traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.tls.options: default
    hosts:
      - host: auth.unerror.network
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
        - auth.unerror.network
        secretName: casdoor-ingress-tls
